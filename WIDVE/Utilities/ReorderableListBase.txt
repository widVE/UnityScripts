using UnityEditorInternal;

//rename this to match the List in the underlying script
ReorderableList _list;

protected virtual void OnEnable()
{
    _list = new ReorderableList(serializedObject, serializedObject.FindProperty(nameof(_list)),
								true, true, true, true);

    _list.drawHeaderCallback = rect =>
    {
        EditorGUI.LabelField(rect, "List");
    };

    _list.drawElementCallback = (Rect rect, int index, bool isActive, bool isFocused) =>
    {
        SerializedProperty element = _list.serializedProperty.GetArrayElementAtIndex(index);
        EditorGUI.PropertyField(position: new Rect(rect.x, rect.y, rect.width, EditorGUIUtility.singleLineHeight),
								property: element,
								label: new GUIContent(index.ToString()));
    };
}

public override void OnInspectorGUI()
{
    serializedObject.Update();
	DrawDefaultInspector();
    _list.DoLayoutList();
    serializedObject.ApplyModifiedProperties();
}